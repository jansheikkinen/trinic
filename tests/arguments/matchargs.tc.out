
### LEXER ###
000:     FUNCTION,     (null), (003, 008)
001:   IDENTIFIER,       main, (003, 013)
002:            (,     (null), (003, 014)
003:         VOID,     (null), (003, 018)
004:            ),     (null), (003, 019)
005:           ->,     (null), (003, 021)
006:         VOID,     (null), (003, 026)
007:           DO,     (null), (003, 029)
008:        MATCH,     (null), (004, 007)
009:   IDENTIFIER,          a, (004, 009)
010:           DO,     (null), (004, 012)
011:      INTEGER,          1, (005, 006)
012:           =>,     (null), (005, 010)
013:      INTEGER,          2, (005, 013)
014:            ;,     (null), (005, 013)
015:      INTEGER,          3, (006, 006)
016:            ,,     (null), (006, 006)
017:      INTEGER,          4, (006, 009)
018:           =>,     (null), (006, 010)
019:      INTEGER,          5, (006, 013)
020:            ;,     (null), (006, 013)
021:          END,     (null), (007, 005)
022:          END,     (null), (008, 003)

### AST GENERATION ###
Declaration FUNCTION  main
  Stmt MATCH
    Expr VARIABLE a
    Arg MATCH_ARM
      Match_Arm
        Arg EXPR
          Expr LITERAL
            INT 1
        Stmt EXPRESSION
          Expr LITERAL
            INT 2
      Match_Arm
        Arg EXPR
          Expr LITERAL
            INT 3
          Expr LITERAL
            INT 4
        Stmt EXPRESSION
          Expr LITERAL
            INT 5
