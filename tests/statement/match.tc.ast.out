## PARSER ##
Parsing tests/statement/match.tc...

### LEXER ###
Generating tokens from source...
Generated 43 tokens
000:     FUNCTION,     (null), (003, 008)
001:   IDENTIFIER,       main, (003, 013)
002:            (,     (null), (003, 014)
003:         VOID,     (null), (003, 018)
004:            ),     (null), (003, 019)
005:           ->,     (null), (003, 021)
006:         VOID,     (null), (003, 026)
007:           DO,     (null), (003, 029)
008:        MATCH,     (null), (004, 007)
009:   IDENTIFIER,          x, (004, 009)
010:           DO,     (null), (004, 012)
011:      INTEGER,          1, (005, 006)
012:           =>,     (null), (005, 007)
013:        PRINT,     (null), (005, 013)
014:            (,     (null), (005, 014)
015:      INTEGER,          1, (005, 016)
016:            ),     (null), (005, 016)
017:            ;,     (null), (005, 017)
018:      INTEGER,          2, (006, 006)
019:            ,,     (null), (006, 006)
020:      INTEGER,          3, (006, 009)
021:           =>,     (null), (006, 010)
022:        PRINT,     (null), (006, 016)
023:            (,     (null), (006, 017)
024:      INTEGER,          2, (006, 019)
025:            ),     (null), (006, 019)
026:            ;,     (null), (006, 020)
027:      INTEGER,          4, (007, 006)
028:           =>,     (null), (007, 007)
029:           DO,     (null), (007, 010)
030:        PRINT,     (null), (007, 016)
031:            (,     (null), (007, 017)
032:      INTEGER,          3, (007, 019)
033:            ),     (null), (007, 019)
034:            ;,     (null), (007, 020)
035:        PRINT,     (null), (007, 026)
036:            (,     (null), (007, 027)
037:      INTEGER,          4, (007, 029)
038:            ),     (null), (007, 029)
039:            ;,     (null), (007, 030)
040:          END,     (null), (007, 034)
041:          END,     (null), (008, 005)
042:          END,     (null), (009, 003)

### AST GENERATION ###
Declaration FUNCTION  main
  Stmt MATCH
    Expr VARIABLE x
    Arg MATCH_ARM
      Match_Arm
        Arg EXPR
          Expr LITERAL
            INT 1
        Stmt BUILTIN print
          Expr LITERAL
            INT 1
      Match_Arm
        Arg EXPR
          Expr LITERAL
            INT 2
          Expr LITERAL
            INT 3
        Stmt BUILTIN print
          Expr LITERAL
            INT 2
      Match_Arm
        Arg EXPR
          Expr LITERAL
            INT 4
        Stmt BUILTIN print
          Expr LITERAL
            INT 3
        Stmt BUILTIN print
          Expr LITERAL
            INT 4
