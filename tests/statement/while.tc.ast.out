## PARSER ##
Parsing tests/statement/while.tc...

### LEXER ###
Generating tokens from source...
Generated 36 tokens
000:     FUNCTION,     (null), (003, 008)
001:   IDENTIFIER,       main, (003, 013)
002:            (,     (null), (003, 014)
003:         VOID,     (null), (003, 018)
004:            ),     (null), (003, 019)
005:           ->,     (null), (003, 021)
006:         VOID,     (null), (003, 026)
007:           DO,     (null), (003, 029)
008:        WHILE,     (null), (004, 007)
009:      INTEGER,          1, (004, 010)
010:           DO,     (null), (004, 012)
011:        PRINT,     (null), (004, 018)
012:            (,     (null), (004, 019)
013:      INTEGER,          1, (004, 021)
014:            ),     (null), (004, 021)
015:            ;,     (null), (004, 022)
016:          END,     (null), (004, 026)
017:        WHILE,     (null), (005, 007)
018:      INTEGER,          1, (005, 010)
019:           DO,     (null), (005, 012)
020:        PRINT,     (null), (005, 018)
021:            (,     (null), (005, 019)
022:      INTEGER,          1, (005, 021)
023:            ),     (null), (005, 021)
024:            ;,     (null), (005, 022)
025:        WHILE,     (null), (005, 028)
026:      INTEGER,          2, (005, 031)
027:           DO,     (null), (005, 033)
028:        PRINT,     (null), (005, 039)
029:            (,     (null), (005, 040)
030:      INTEGER,          2, (005, 042)
031:            ),     (null), (005, 042)
032:            ;,     (null), (005, 043)
033:          END,     (null), (005, 047)
034:          END,     (null), (005, 051)
035:          END,     (null), (006, 003)

### AST GENERATION ###
Declaration FUNCTION  main
  Stmt WHILE
    Expr LITERAL
      INT 1
    Stmt BUILTIN print
      Expr LITERAL
        INT 1
  Stmt WHILE
    Expr LITERAL
      INT 1
    Stmt BUILTIN print
      Expr LITERAL
        INT 1
    Stmt WHILE
      Expr LITERAL
        INT 2
      Stmt BUILTIN print
        Expr LITERAL
          INT 2
