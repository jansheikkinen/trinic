
### LEXER ###
000:     FUNCTION,     (null), (003, 008)
001:   IDENTIFIER,       main, (003, 013)
002:            (,     (null), (003, 014)
003:         VOID,     (null), (003, 018)
004:            ),     (null), (003, 019)
005:           ->,     (null), (003, 021)
006:         VOID,     (null), (003, 026)
007:           DO,     (null), (003, 029)
008:            ~,     (null), (004, 003)
009:      INTEGER,          1, (004, 005)
010:            ;,     (null), (004, 005)
011:            !,     (null), (004, 007)
012:      INTEGER,          1, (004, 009)
013:            ;,     (null), (004, 009)
014:          NOT,     (null), (004, 013)
015:      INTEGER,          1, (004, 016)
016:            ;,     (null), (004, 016)
017:            -,     (null), (004, 018)
018:      INTEGER,          1, (004, 020)
019:            ;,     (null), (004, 020)
020:            *,     (null), (004, 022)
021:      INTEGER,          1, (004, 024)
022:            ;,     (null), (004, 024)
023:            &,     (null), (004, 026)
024:      INTEGER,          1, (004, 028)
025:            ;,     (null), (004, 028)
026:          END,     (null), (005, 003)

### AST GENERATION ###
Declaration FUNCTION  main
  Stmt EXPRESSION
    Expr UNARY ~
      Expr LITERAL
        INT 1
  Stmt EXPRESSION
    Expr UNARY !
      Expr LITERAL
        INT 1
  Stmt EXPRESSION
    Expr UNARY NOT
      Expr LITERAL
        INT 1
  Stmt EXPRESSION
    Expr UNARY -
      Expr LITERAL
        INT 1
  Stmt EXPRESSION
    Expr UNARY *
      Expr LITERAL
        INT 1
  Stmt EXPRESSION
    Expr UNARY &
      Expr LITERAL
        INT 1
