## PARSER ##
Parsing tests/expression/order-of-operations.tc...

### LEXER ###
Generating tokens from source...
Generated 39 tokens
000:     FUNCTION,     (null), (003, 008)
001:   IDENTIFIER,       main, (003, 013)
002:            (,     (null), (003, 014)
003:         VOID,     (null), (003, 018)
004:            ),     (null), (003, 019)
005:           ->,     (null), (003, 021)
006:         VOID,     (null), (003, 026)
007:           DO,     (null), (003, 029)
008:      INTEGER,          1, (004, 004)
009:          AND,     (null), (004, 007)
010:      INTEGER,          2, (004, 010)
011:           ==,     (null), (004, 011)
012:      INTEGER,          3, (004, 014)
013:            >,     (null), (004, 015)
014:      INTEGER,          4, (004, 018)
015:            &,     (null), (004, 019)
016:      INTEGER,          5, (004, 022)
017:            +,     (null), (004, 023)
018:      INTEGER,          6, (004, 026)
019:            *,     (null), (004, 027)
020:            -,     (null), (004, 029)
021:      INTEGER,          7, (004, 031)
022:            ;,     (null), (004, 031)
023:            -,     (null), (005, 003)
024:      INTEGER,          1, (005, 005)
025:            *,     (null), (005, 006)
026:      INTEGER,          2, (005, 009)
027:            +,     (null), (005, 010)
028:      INTEGER,          3, (005, 013)
029:            &,     (null), (005, 014)
030:      INTEGER,          4, (005, 017)
031:            >,     (null), (005, 018)
032:      INTEGER,          5, (005, 021)
033:           ==,     (null), (005, 022)
034:      INTEGER,          6, (005, 025)
035:          AND,     (null), (005, 028)
036:      INTEGER,          7, (005, 031)
037:            ;,     (null), (005, 031)
038:          END,     (null), (006, 003)

### AST GENERATION ###
Declaration FUNCTION  main
  Stmt EXPRESSION
    Expr BINARY AND
      Expr LITERAL
        INT 1
      Expr BINARY ==
        Expr LITERAL
          INT 2
        Expr BINARY >
          Expr LITERAL
            INT 3
          Expr BINARY &
            Expr LITERAL
              INT 4
            Expr BINARY +
              Expr LITERAL
                INT 5
              Expr BINARY *
                Expr LITERAL
                  INT 6
                Expr UNARY -
                  Expr LITERAL
                    INT 7
  Stmt EXPRESSION
    Expr BINARY AND
      Expr BINARY ==
        Expr BINARY >
          Expr BINARY &
            Expr BINARY +
              Expr BINARY *
                Expr UNARY -
                  Expr LITERAL
                    INT 1
                Expr LITERAL
                  INT 2
              Expr LITERAL
                INT 3
            Expr LITERAL
              INT 4
          Expr LITERAL
            INT 5
        Expr LITERAL
          INT 6
      Expr LITERAL
        INT 7
